# models.py

from flask_login import UserMixin
from .extensions import db
from sqlalchemy.sql import func
from sqlalchemy.dialects.postgresql import JSONB

class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(150), unique=True, nullable=False)
    email = db.Column(db.String(150), unique=True, nullable=False)
    password = db.Column(db.String(150), nullable=False)
    first_name = db.Column(db.String(50))
    last_name = db.Column(db.String(50))
    created_at = db.Column(db.DateTime(timezone=True), server_default=func.now())

class FileContent(db.Model):
    __tablename__ = 'file_content'
    id = db.Column(db.Integer, primary_key=True)
    original_filename = db.Column(db.String(255), nullable=False)
    filename = db.Column(db.String(255), nullable=False)
    data = db.Column(db.LargeBinary, nullable=False)
    uploaded_by = db.Column(db.Integer, db.ForeignKey('user.id'))
    uploaded_at = db.Column(db.DateTime(timezone=True), server_default=func.now())
    uploader = db.relationship('User', backref=db.backref('files', lazy=True))
    analysis_status = db.Column(db.String(50), nullable=False, default='pending')
    analysis_results = db.Column(JSONB, nullable=True)
