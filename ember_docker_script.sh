#!/bin/bash

# Check if at least two arguments were provided
if [ $# -lt 2 ]; then
  echo "Usage: $0 <file_id> <file_or_directory_path> ..."
  exit 1
fi

file_id="$1"
shift

image_name="ember-feature-extraction"
container_name="${image_name}_$(date +%s%N)_$$"

# Build docker image if it doesn't exist
if [[ "$(docker images -q $image_name 2> /dev/null)" == "" ]]; then
  docker build -t $image_name .
fi

# Run container
container_id=$(docker run -d --network none --name $container_name $image_name sleep infinity)

# Path to the lock file
lock_file="/tmp/docker_cp.lock"

touch "$lock_file"

# Copy each file or directory to the container with a lock
exec 200>"$lock_file" # Open the lock file and assign file descriptor 200
flock -n 200 || exit 1 # Acquire an exclusive lock

# Copy each file or directory to the container
for path in "$@"; do
  if [ ! -e "$path" ]; then
    echo "Path $path does not exist."
    docker kill $container_id
    docker rm $container_id
    exit 1
  fi
  # Use Docker cp to copy files and directories
  docker cp "$path" "$container_id:/home/app/$(basename "$path")"
done

flock -u 200 # Release the lock

# Execute commands inside the container using non-interactive mode
docker exec -i "$container_id" bash <<EOF
  # Run the Python script to analyze the files and generate the JSON output
  for file in /home/app/*; do
    if [ -f "\$file" ]; then
      /home/app/venv/bin/python /home/app/ember_test.py "\$file"
    fi
  done
EOF

###############
# Execute commands inside the container using non-interactive mode
# echo "Executing Python script inside the container..."
# docker exec -i "$container_id" bash <<EOF
#   # Debugging: List files in /home/app before running the Python script
#   echo "Files in /home/app before running the script:"
#   ls -l /home/app

#   # Run the Python script to analyze the files and generate the JSON output
#   for file in /home/app/*; do
#     if [ -f "\$file" ]; then
#       echo "Processing file: \$file"
#       /home/app/venv/bin/python /home/app/analyze_file_ember.py "\$file"
#       echo "Completed processing file: \$file"
#     fi
#   done

#   # Debugging: List files in /home/app after running the Python script
#   echo "Files in /home/app after running the script:"
#   ls -l /home/app
# EOF
###############

exec 200>"$lock_file" # Open the lock file and assign file descriptor 200
flock -n 200 || exit 1 # Acquire an exclusive lock

# Copy the resulting JSON files back to the host
for path in "$@"; do
  if [ -f "$path" ]; then
    docker cp "$container_id:/home/app/$(basename "$path").json" "TempFileFolder/$file_id/"
  elif [ -d "$path" ]; then
    for file in "$path"/*; do
      docker cp "$container_id:/home/app/$(basename "$path")/$(basename "$file").json" "TempFileFolder/$file_id/"
    done
  fi
done

flock -u 200 # Release the lock

# After the Docker container has finished running, kill and remove it
docker kill $container_id
docker rm $container_id

echo "Analysis completed. Results saved to .json files."