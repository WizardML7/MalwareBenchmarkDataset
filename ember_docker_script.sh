#!/bin/bash

# Check if at least one argument was provided
if [ $# -eq 0 ]; then
  echo "Please provide at least one file or directory name as a command line argument."
  exit 1
fi

image_name="ember-feature-extraction"
timestamp=$(date +%s)
container_name="${image_name}_${timestamp}"

# Build docker image if it doesn't exist
if [[ "$(docker images -q $image_name 2> /dev/null)" == "" ]]; then
  docker build -t $image_name .
fi

# Run container
container_id=$(docker run -d --network none --name $container_name $image_name sleep infinity)

# Copy each file or directory to the container
for path in "$@"; do
  if [ ! -e "$path" ]; then
    echo "Path $path does not exist."
    docker kill $container_id
    docker rm $container_id
    exit 1
  fi
  # Use Docker cp to copy files and directories
  docker cp "$path" "$container_id:/home/app/$(basename "$path")"
done

# Execute commands inside the container using non-interactive mode
docker exec -i "$container_id" bash <<EOF
  # Run the Python script to analyze the files and generate the JSON output
  for file in /home/app/*; do
    if [ -f "\$file" ]; then
      /home/app/venv/bin/python /home/app/ember_test.py "\$file"
    fi
  done
EOF

# Copy the resulting JSON files back to the host
for path in "$@"; do
  if [ -f "$path" ]; then
    docker cp "$container_id:/home/app/$(basename "$path")_${timestamp}.json" .
  elif [ -d "$path" ]; then
    for file in "$path"/*; do
      docker cp "$container_id:/home/app/$(basename "$path")_${timestamp}/$(basename "$file").json" .
    done
  fi
done

# After the Docker container has finished running, kill and remove it
docker kill $container_id
docker rm $container_id

echo "Analysis completed. Results saved to .json files."