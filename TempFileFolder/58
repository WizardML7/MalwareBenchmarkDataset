;Domenic Lo Iacono
;CSEC 202.03
;ASM1
;1) 52+86
mov eax, 52 ;Moving value 52 to eax
mov ebx, 86 ;Moving value 86 to ebx
add eax, ebx ;Value of 138 found in eax

;2) 86-52
sub ebx,52 ;Subtracting 52 from the value in ebx (86) to get 34

mov eax, 0 ;Resetting EAX and EBX
mov ebx, 0

;3) 9*7
mov al, 9	;Setting al to hold 9
mov bh, 7	;Setging bh to hold 7
mul bh		;Multiplying the al and bh registers togther with the result in ax

mov eax, 0 ;Resetting EAX and EBX
mov ebx, 0

;4) -9 * 7
mov eax, -9	;Moving the signed -9 to eax
mov ecx, 7	;Moving 7 to ecx
idiv ecx	;Preforming signed division which places a -1 in eax, and -2 in edx as there is a remainder of -2. Ecx remains unchanged as 7

mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;5) 8/4*2
mov eax, 8 ;Moving 8 to eax
mov ecx, 4	;Moving 4 to ecx
idiv ecx	;Preforming division with the result in eax being 2
mov ebx,2	;Moving 2 to ebx
mul ebx		;Preforming multiplication with the result in eax being 4

mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;6) -8/4*2
mov eax, -8 ;Moving -8 to eax
mov ecx, 4	;Moving 4 to ecx
idiv ecx	;Preforming division with the result in eax being -2
mov ebx,2	;Moving 2 to ebx
imul ebx		;Preforming multiplication with the result in eax being -4

mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;7) Start with -21, sign extend it into a register
mov ebx, -21	;Moving -21 to ebx
movsx eax, bl	;Sign extending it into the eax register

mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;8) Start with 21, sign extend it into a register
mov ebx, 21	;Moving 21 to ebx
movsx eax, bl	;Sign extending it into the eax register

mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;9) Start with -88, zero extend it into a register
mov eax, 0xffffffff	;Filling the register to make changes obvious
mov ebx, 0xffffffff
mov bl, -88		;Moving -88 to bl
movzx eax, bl	;Moving -88 to eax with a zero extension which makes the value in eax appear as 168 signed or unsigned


mov eax, 0 ;Resetting EAX, EBX, ECX, and EDX
mov ebx, 0
mov ecx, 0
mov edx, 0

;10) Start with 88, zero extend it into a register
mov eax, 0xffffffff	;Filling the register to make changes obvious
mov ebx, 0xffffffff
mov bl, 88		;Moving 88 to bl but in the registers it appears as a negative number. This is because there are leading ones in the upper part of the register
movzx eax, bl	;Moving just the 8-bit register bl to eax and then zero extending it which makes the register EAX have a value of 88. 
